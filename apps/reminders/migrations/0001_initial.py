# Generated by Django 4.2.24 on 2025-09-11 02:27

import apps.reminders.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('students', '0002_courserecord'),
        ('persons', '0002_personrole_personrole_uq_person_role'),
        ('evaluations', '0005_studentpiecestatus_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='Reminder',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='系统自动生成的唯一标识符', primary_key=True, serialize=False, verbose_name='主键ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='记录创建的UTC时间', verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='记录最后更新的UTC时间', verbose_name='更新时间')),
                ('deleted_at', models.DateTimeField(blank=True, help_text='软删除标记时间，为空表示未删除', null=True, verbose_name='删除时间')),
                ('e2e_type', models.CharField(choices=[('T2R', 'T→R'), ('T2O', 'T→O'), ('R2T', 'R→T'), ('R2O', 'R→O'), ('O2T', 'O→T'), ('O2R', 'O→R')], help_text='系统根据发送人与接收人角色自动推断（T→R/T→O/R→T/R→O/O→T/O→R）', max_length=8, verbose_name='端到端类别')),
                ('urgency', models.CharField(choices=[('urgent', '紧急需处理'), ('normal', '不紧急需留意')], default='normal', help_text='紧急需处理 / 不紧急需留意', max_length=16, verbose_name='紧急度')),
                ('category', models.CharField(choices=[('poor_effect', '教学效果差'), ('attitude', '学员态度问题'), ('injury', '有伤病'), ('other', '其他')], default='other', help_text='例如：教学效果差、学员态度问题、有伤病等', max_length=32, verbose_name='提醒事项分类')),
                ('start_at', models.DateTimeField(default=django.utils.timezone.now, help_text='提醒事项开始生效的时间（UTC）', verbose_name='开始时间')),
                ('end_at', models.DateTimeField(blank=True, default=apps.reminders.models.default_one_week_later, help_text='提醒事项结束时间（UTC），为空视为仍有效', null=True, verbose_name='结束时间')),
                ('content', models.TextField(help_text='提醒内容的详细描述', verbose_name='提醒内容')),
                ('created_by', models.ForeignKey(blank=True, help_text='创建此记录的人员', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to='persons.person', verbose_name='创建者')),
                ('feedback', models.ForeignKey(blank=True, help_text='可选：提醒关联的点评上下文', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='related_reminders', to='evaluations.feedbackrecord', verbose_name='关联点评记录')),
                ('receiver', models.ForeignKey(blank=True, help_text='便捷场景的单接收人，实际接收人集合以子表为准', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='primary_received_reminders', to='persons.person', verbose_name='接收人（单）')),
                ('sender', models.ForeignKey(help_text='发送提醒的人员（教师/教研/运营）', on_delete=django.db.models.deletion.PROTECT, related_name='sent_reminders', to='persons.person', verbose_name='发送人')),
                ('student', models.ForeignKey(blank=True, help_text='可选：提醒涉及的学员', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='reminders', to='students.student', verbose_name='关联学员')),
                ('updated_by', models.ForeignKey(blank=True, help_text='最后更新此记录的人员', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to='persons.person', verbose_name='更新者')),
            ],
            options={
                'verbose_name': '提醒事项',
                'verbose_name_plural': '提醒事项',
                'db_table': 'reminders_reminder',
            },
        ),
        migrations.CreateModel(
            name='ReminderRecipient',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='系统自动生成的唯一标识符', primary_key=True, serialize=False, verbose_name='主键ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='记录创建的UTC时间', verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='记录最后更新的UTC时间', verbose_name='更新时间')),
                ('deleted_at', models.DateTimeField(blank=True, help_text='软删除标记时间，为空表示未删除', null=True, verbose_name='删除时间')),
                ('is_read', models.BooleanField(default=False, verbose_name='是否已读')),
                ('read_at', models.DateTimeField(blank=True, null=True, verbose_name='读取时间')),
                ('created_by', models.ForeignKey(blank=True, help_text='创建此记录的人员', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to='persons.person', verbose_name='创建者')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='reminder_inbox', to='persons.person', verbose_name='接收人')),
                ('reminder', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recipients', to='reminders.reminder', verbose_name='提醒事项')),
                ('updated_by', models.ForeignKey(blank=True, help_text='最后更新此记录的人员', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to='persons.person', verbose_name='更新者')),
            ],
            options={
                'verbose_name': '提醒接收人',
                'verbose_name_plural': '提醒接收人',
                'db_table': 'reminders_reminder_recipient',
                'indexes': [
                    models.Index(fields=['person', 'is_read'], name='idx_rmd_person_read'),
                    models.Index(fields=['reminder'], name='idx_rmd_reminder'),
                ],
            },
        ),
        migrations.AddConstraint(
            model_name='reminderrecipient',
            constraint=models.UniqueConstraint(
                condition=models.Q(('deleted_at__isnull', True)),
                fields=('reminder', 'person'),
                name='uq_rmd_rr_person_not_deleted',
            ),
        ),
        migrations.AddIndex(
            model_name='reminder',
            index=models.Index(fields=['urgency'], name='idx_rmd_reminder_urgency'),
        ),
        migrations.AddIndex(
            model_name='reminder',
            index=models.Index(fields=['category'], name='idx_rmd_reminder_category'),
        ),
        migrations.AddIndex(
            model_name='reminder',
            index=models.Index(fields=['sender'], name='idx_rmd_reminder_sender'),
        ),
        migrations.AddIndex(
            model_name='reminder',
            index=models.Index(fields=['receiver'], name='idx_rmd_reminder_receiver'),
        ),
        migrations.AddIndex(
            model_name='reminder',
            index=models.Index(fields=['student'], name='idx_rmd_reminder_student'),
        ),
        migrations.AddIndex(
            model_name='reminder',
            index=models.Index(fields=['start_at'], name='idx_rmd_reminder_start'),
        ),
        migrations.AddIndex(
            model_name='reminder',
            index=models.Index(fields=['end_at'], name='idx_rmd_reminder_end'),
        ),
        migrations.AddIndex(
            model_name='reminder',
            index=models.Index(fields=['created_at'], name='idx_rmd_reminder_created'),
        ),
    ]
