# Generated by Django 4.2.24 on 2025-09-11 01:40

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('courses', '0001_initial'),
        ('students', '0002_courserecord'),
        ('persons', '0002_personrole_personrole_uq_person_role'),
    ]

    operations = [
        migrations.CreateModel(
            name='EvaluationTask',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='系统自动生成的唯一标识符', primary_key=True, serialize=False, verbose_name='主键ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='记录创建的UTC时间', verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='记录最后更新的UTC时间', verbose_name='更新时间')),
                ('deleted_at', models.DateTimeField(blank=True, help_text='软删除标记时间，为空表示未删除', null=True, verbose_name='删除时间')),
                ('batch_id', models.UUIDField(blank=True, null=True, verbose_name='批次号')),
                ('status', models.CharField(choices=[('pending', '未完成'), ('completed', '已完成')], default='pending', max_length=20, verbose_name='状态')),
                ('source', models.CharField(choices=[('researcher', '教研'), ('teacher', '教师')], max_length=20, verbose_name='来源')),
                ('note', models.TextField(blank=True, null=True, verbose_name='备注')),
                ('assignee', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='assigned_tasks', to='persons.person', verbose_name='任务负责教师')),
                ('created_by', models.ForeignKey(blank=True, help_text='创建此记录的人员', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to='persons.person', verbose_name='创建者')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='evaluation_tasks', to='students.student', verbose_name='学员')),
                ('updated_by', models.ForeignKey(blank=True, help_text='最后更新此记录的人员', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to='persons.person', verbose_name='更新者')),
            ],
            options={
                'verbose_name': '点评任务',
                'verbose_name_plural': '点评任务',
                'db_table': 'evaluations_evaluation_task',
            },
        ),
        migrations.CreateModel(
            name='FeedbackRecord',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='系统自动生成的唯一标识符', primary_key=True, serialize=False, verbose_name='主键ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='记录创建的UTC时间', verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='记录最后更新的UTC时间', verbose_name='更新时间')),
                ('deleted_at', models.DateTimeField(blank=True, help_text='软删除标记时间，为空表示未删除', null=True, verbose_name='删除时间')),
                ('teacher_content', models.TextField(verbose_name='教师点评内容')),
                ('researcher_feedback', models.TextField(blank=True, null=True, verbose_name='教研反馈')),
                ('produce_impression', models.BooleanField(default=False, verbose_name='产出当前印象')),
                ('impression_text', models.TextField(blank=True, null=True, verbose_name='印象文本')),
                ('created_by', models.ForeignKey(blank=True, help_text='创建此记录的人员', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to='persons.person', verbose_name='创建者')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='feedback_records', to='students.student', verbose_name='学员')),
                ('task', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, related_name='feedback', to='evaluations.evaluationtask', verbose_name='任务')),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='feedback_given', to='persons.person', verbose_name='点评教师')),
                ('updated_by', models.ForeignKey(blank=True, help_text='最后更新此记录的人员', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to='persons.person', verbose_name='更新者')),
            ],
            options={
                'verbose_name': '点评记录',
                'verbose_name_plural': '点评记录',
                'db_table': 'evaluations_feedback_record',
            },
        ),
        migrations.CreateModel(
            name='FeedbackPieceDetail',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='系统自动生成的唯一标识符', primary_key=True, serialize=False, verbose_name='主键ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='记录创建的UTC时间', verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='记录最后更新的UTC时间', verbose_name='更新时间')),
                ('deleted_at', models.DateTimeField(blank=True, help_text='软删除标记时间，为空表示未删除', null=True, verbose_name='删除时间')),
                ('course_version', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='feedback_details', to='courses.courseversion', verbose_name='课程版本')),
                ('created_by', models.ForeignKey(blank=True, help_text='创建此记录的人员', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to='persons.person', verbose_name='创建者')),
                ('feedback', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='details', to='evaluations.feedbackrecord', verbose_name='点评记录')),
                ('lesson_version', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='feedback_details', to='courses.lessonversion', verbose_name='课次版本')),
                ('piece_version', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='feedback_details', to='courses.pieceversion', verbose_name='曲目版本')),
                ('updated_by', models.ForeignKey(blank=True, help_text='最后更新此记录的人员', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to='persons.person', verbose_name='更新者')),
            ],
            options={
                'verbose_name': '点评曲目明细',
                'verbose_name_plural': '点评曲目明细',
                'db_table': 'evaluations_feedback_piece_detail',
            },
        ),
        migrations.AddIndex(
            model_name='feedbackrecord',
            index=models.Index(fields=['student', 'created_at'], name='idx_feedback_student_created'),
        ),
        migrations.AddIndex(
            model_name='feedbackrecord',
            index=models.Index(fields=['teacher', 'created_at'], name='idx_feedback_teacher_created'),
        ),
        migrations.AddIndex(
            model_name='feedbackrecord',
            index=models.Index(fields=['task'], name='idx_feedback_task'),
        ),
        migrations.AddIndex(
            model_name='feedbackpiecedetail',
            index=models.Index(fields=['feedback'], name='idx_fpd_feedback'),
        ),
        migrations.AddIndex(
            model_name='feedbackpiecedetail',
            index=models.Index(fields=['piece_version'], name='idx_fpd_piece_ver'),
        ),
        migrations.AddConstraint(
            model_name='feedbackpiecedetail',
            constraint=models.UniqueConstraint(fields=('feedback', 'piece_version'), name='uq_feedback_piece'),
        ),
        migrations.AddIndex(
            model_name='evaluationtask',
            index=models.Index(fields=['assignee', 'status'], name='idx_task_assignee_status'),
        ),
        migrations.AddIndex(
            model_name='evaluationtask',
            index=models.Index(fields=['student'], name='idx_task_student'),
        ),
        migrations.AddIndex(
            model_name='evaluationtask',
            index=models.Index(fields=['batch_id'], name='idx_task_batch'),
        ),
        migrations.AddIndex(
            model_name='evaluationtask',
            index=models.Index(fields=['source'], name='idx_task_source'),
        ),
    ]
