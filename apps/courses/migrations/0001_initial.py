# Generated by Django 4.2.24 on 2025-09-10 15:06

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('persons', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='系统自动生成的唯一标识符', primary_key=True, serialize=False, verbose_name='主键ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='记录创建的UTC时间', verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='记录最后更新的UTC时间', verbose_name='更新时间')),
                ('deleted_at', models.DateTimeField(blank=True, help_text='软删除标记时间，为空表示未删除', null=True, verbose_name='删除时间')),
                ('name', models.CharField(help_text='课程的名称，如基础班、中级班等', max_length=100, verbose_name='课程名称')),
                ('status', models.CharField(choices=[('enabled', '启用'), ('disabled', '停用')], default='enabled', help_text='课程的启用状态', max_length=20, verbose_name='课程状态')),
                ('description', models.TextField(blank=True, help_text='对课程的详细描述', null=True, verbose_name='课程描述')),
                ('created_by', models.ForeignKey(blank=True, help_text='创建此记录的人员', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to='persons.person', verbose_name='创建者')),
                ('updated_by', models.ForeignKey(blank=True, help_text='最后更新此记录的人员', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to='persons.person', verbose_name='更新者')),
            ],
            options={
                'verbose_name': '课程',
                'verbose_name_plural': '课程',
                'db_table': 'courses_course',
            },
        ),
        migrations.CreateModel(
            name='CourseVersion',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='系统自动生成的唯一标识符', primary_key=True, serialize=False, verbose_name='主键ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='记录创建的UTC时间', verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='记录最后更新的UTC时间', verbose_name='更新时间')),
                ('deleted_at', models.DateTimeField(blank=True, help_text='软删除标记时间，为空表示未删除', null=True, verbose_name='删除时间')),
                ('version_label', models.CharField(help_text='版本的标识标签，如2024版', max_length=64, verbose_name='版本标签')),
                ('status', models.CharField(choices=[('enabled', '启用'), ('disabled', '停用')], default='enabled', help_text='版本的启用状态', max_length=20, verbose_name='版本状态')),
                ('released_at', models.DateTimeField(blank=True, help_text='版本的正式发布时间', null=True, verbose_name='发布时间')),
                ('content_snapshot', models.TextField(blank=True, help_text='版本内容的JSON快照，用于历史回查', null=True, verbose_name='内容快照')),
                ('course', models.ForeignKey(help_text='该版本所属的课程', on_delete=django.db.models.deletion.PROTECT, related_name='versions', to='courses.course', verbose_name='关联课程')),
                ('created_by', models.ForeignKey(blank=True, help_text='创建此记录的人员', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to='persons.person', verbose_name='创建者')),
                ('updated_by', models.ForeignKey(blank=True, help_text='最后更新此记录的人员', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to='persons.person', verbose_name='更新者')),
            ],
            options={
                'verbose_name': '课程版本',
                'verbose_name_plural': '课程版本',
                'db_table': 'courses_course_version',
                'ordering': ['-released_at', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Lesson',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='系统自动生成的唯一标识符', primary_key=True, serialize=False, verbose_name='主键ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='记录创建的UTC时间', verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='记录最后更新的UTC时间', verbose_name='更新时间')),
                ('deleted_at', models.DateTimeField(blank=True, help_text='软删除标记时间，为空表示未删除', null=True, verbose_name='删除时间')),
                ('name', models.CharField(help_text='课程的名称，如第1课、第2课等', max_length=100, verbose_name='课程名称')),
                ('status', models.CharField(choices=[('enabled', '启用'), ('disabled', '停用')], default='enabled', help_text='课程的启用状态', max_length=20, verbose_name='课程状态')),
                ('sort_order', models.PositiveIntegerField(help_text='课程在所属课程中的排序序号，从1开始', validators=[django.core.validators.MinValueValidator(1)], verbose_name='排序序号')),
                ('description', models.TextField(blank=True, help_text='对课程的详细描述', null=True, verbose_name='课程描述')),
                ('course', models.ForeignKey(help_text='该课所属的课程', on_delete=django.db.models.deletion.PROTECT, related_name='lessons', to='courses.course', verbose_name='所属课程')),
                ('created_by', models.ForeignKey(blank=True, help_text='创建此记录的人员', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to='persons.person', verbose_name='创建者')),
                ('updated_by', models.ForeignKey(blank=True, help_text='最后更新此记录的人员', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to='persons.person', verbose_name='更新者')),
            ],
            options={
                'verbose_name': '课',
                'verbose_name_plural': '课',
                'db_table': 'courses_lesson',
                'ordering': ['course', 'sort_order'],
            },
        ),
        migrations.CreateModel(
            name='LessonVersion',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='系统自动生成的唯一标识符', primary_key=True, serialize=False, verbose_name='主键ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='记录创建的UTC时间', verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='记录最后更新的UTC时间', verbose_name='更新时间')),
                ('deleted_at', models.DateTimeField(blank=True, help_text='软删除标记时间，为空表示未删除', null=True, verbose_name='删除时间')),
                ('sort_order', models.PositiveIntegerField(help_text='在该课程版本中的排序序号', validators=[django.core.validators.MinValueValidator(1)], verbose_name='版本内排序')),
                ('category', models.CharField(blank=True, choices=[('basic', '基础版'), ('zero_basic', '零基础版')], help_text='在该版本中的课分类', max_length=20, null=True, verbose_name='课分类')),
                ('focus', models.CharField(blank=True, choices=[('wrist', '手腕'), ('arm', '手臂'), ('lift_finger', '抬指')], help_text='在该版本中的课重点', max_length=20, null=True, verbose_name='课重点')),
                ('description', models.TextField(blank=True, help_text='在该版本中的课描述', null=True, verbose_name='版本描述')),
                ('course_version', models.ForeignKey(help_text='所属的课程版本', on_delete=django.db.models.deletion.PROTECT, related_name='lesson_versions', to='courses.courseversion', verbose_name='课程版本')),
                ('created_by', models.ForeignKey(blank=True, help_text='创建此记录的人员', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to='persons.person', verbose_name='创建者')),
                ('lesson', models.ForeignKey(help_text='该版本记录对应的课', on_delete=django.db.models.deletion.PROTECT, related_name='versions', to='courses.lesson', verbose_name='关联课')),
                ('updated_by', models.ForeignKey(blank=True, help_text='最后更新此记录的人员', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to='persons.person', verbose_name='更新者')),
            ],
            options={
                'verbose_name': '课版本',
                'verbose_name_plural': '课版本',
                'db_table': 'courses_lesson_version',
                'ordering': ['course_version', 'sort_order'],
            },
        ),
        migrations.CreateModel(
            name='Piece',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='系统自动生成的唯一标识符', primary_key=True, serialize=False, verbose_name='主键ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='记录创建的UTC时间', verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='记录最后更新的UTC时间', verbose_name='更新时间')),
                ('deleted_at', models.DateTimeField(blank=True, help_text='软删除标记时间，为空表示未删除', null=True, verbose_name='删除时间')),
                ('name', models.CharField(help_text='曲目的名称', max_length=150, verbose_name='曲目名称')),
                ('status', models.CharField(choices=[('enabled', '启用'), ('disabled', '停用')], default='enabled', help_text='曲目的启用状态', max_length=20, verbose_name='曲目状态')),
                ('attribute', models.CharField(choices=[('etude', '练习曲'), ('music', '乐曲'), ('technique', '技术练习')], help_text='曲目的属性类型，如练习曲、乐曲、技术练习', max_length=20, verbose_name='曲目属性')),
                ('is_required', models.BooleanField(default=True, help_text='该曲目是否为必修内容', verbose_name='是否必修')),
                ('description', models.TextField(blank=True, help_text='对曲目的详细描述', null=True, verbose_name='曲目描述')),
                ('course', models.ForeignKey(help_text='该曲目所属的课程（通过课间接关联）', on_delete=django.db.models.deletion.PROTECT, related_name='pieces', to='courses.course', verbose_name='所属课程')),
                ('created_by', models.ForeignKey(blank=True, help_text='创建此记录的人员', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to='persons.person', verbose_name='创建者')),
                ('lesson', models.ForeignKey(help_text='该曲目所属的具体课程', on_delete=django.db.models.deletion.PROTECT, related_name='pieces', to='courses.lesson', verbose_name='所属课')),
                ('updated_by', models.ForeignKey(blank=True, help_text='最后更新此记录的人员', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to='persons.person', verbose_name='更新者')),
            ],
            options={
                'verbose_name': '曲目',
                'verbose_name_plural': '曲目',
                'db_table': 'courses_piece',
                'ordering': ['course', 'lesson__sort_order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='PieceVersion',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='系统自动生成的唯一标识符', primary_key=True, serialize=False, verbose_name='主键ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='记录创建的UTC时间', verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='记录最后更新的UTC时间', verbose_name='更新时间')),
                ('deleted_at', models.DateTimeField(blank=True, help_text='软删除标记时间，为空表示未删除', null=True, verbose_name='删除时间')),
                ('attribute', models.CharField(choices=[('etude', '练习曲'), ('music', '乐曲'), ('technique', '技术练习')], help_text='在该版本中的曲目属性', max_length=20, verbose_name='版本内属性')),
                ('is_required', models.BooleanField(default=True, help_text='在该版本中是否为必修曲目', verbose_name='版本内是否必修')),
                ('description', models.TextField(blank=True, help_text='在该版本中的曲目描述', null=True, verbose_name='版本描述')),
                ('created_by', models.ForeignKey(blank=True, help_text='创建此记录的人员', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to='persons.person', verbose_name='创建者')),
                ('lesson_version', models.ForeignKey(help_text='所属的课版本', on_delete=django.db.models.deletion.PROTECT, related_name='piece_versions', to='courses.lessonversion', verbose_name='课版本')),
                ('piece', models.ForeignKey(help_text='该版本记录对应的曲目', on_delete=django.db.models.deletion.PROTECT, related_name='versions', to='courses.piece', verbose_name='关联曲目')),
                ('updated_by', models.ForeignKey(blank=True, help_text='最后更新此记录的人员', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to='persons.person', verbose_name='更新者')),
            ],
            options={
                'verbose_name': '曲目版本',
                'verbose_name_plural': '曲目版本',
                'db_table': 'courses_piece_version',
                'ordering': ['lesson_version', 'piece__name'],
                'indexes': [models.Index(fields=['lesson_version'], name='idx_piece_version_lesson_ver'), models.Index(fields=['piece'], name='idx_piece_version_piece'), models.Index(fields=['attribute'], name='idx_piece_version_attribute'), models.Index(fields=['is_required'], name='idx_piece_version_required')],
            },
        ),
        migrations.AddConstraint(
            model_name='pieceversion',
            constraint=models.UniqueConstraint(condition=models.Q(('deleted_at__isnull', True)), fields=('piece', 'lesson_version'), name='uq_piece_version_not_deleted'),
        ),
        migrations.AddIndex(
            model_name='piece',
            index=models.Index(fields=['lesson'], name='idx_piece_lesson'),
        ),
        migrations.AddIndex(
            model_name='piece',
            index=models.Index(fields=['course'], name='idx_piece_course'),
        ),
        migrations.AddIndex(
            model_name='piece',
            index=models.Index(fields=['status'], name='idx_piece_status'),
        ),
        migrations.AddIndex(
            model_name='piece',
            index=models.Index(fields=['attribute'], name='idx_piece_attribute'),
        ),
        migrations.AddIndex(
            model_name='piece',
            index=models.Index(fields=['is_required'], name='idx_piece_required'),
        ),
        migrations.AddConstraint(
            model_name='piece',
            constraint=models.UniqueConstraint(condition=models.Q(('deleted_at__isnull', True)), fields=('lesson', 'name'), name='uq_piece_lesson_name_not_deleted'),
        ),
        migrations.AddIndex(
            model_name='lessonversion',
            index=models.Index(fields=['course_version'], name='idx_lesson_version_course_ver'),
        ),
        migrations.AddIndex(
            model_name='lessonversion',
            index=models.Index(fields=['lesson'], name='idx_lesson_version_lesson'),
        ),
        migrations.AddIndex(
            model_name='lessonversion',
            index=models.Index(fields=['sort_order'], name='idx_lesson_version_sort'),
        ),
        migrations.AddConstraint(
            model_name='lessonversion',
            constraint=models.UniqueConstraint(condition=models.Q(('deleted_at__isnull', True)), fields=('lesson', 'course_version'), name='uq_lesson_version_not_deleted'),
        ),
        migrations.AddIndex(
            model_name='lesson',
            index=models.Index(fields=['course'], name='idx_lesson_course'),
        ),
        migrations.AddIndex(
            model_name='lesson',
            index=models.Index(fields=['status'], name='idx_lesson_status'),
        ),
        migrations.AddIndex(
            model_name='lesson',
            index=models.Index(fields=['sort_order'], name='idx_lesson_sort'),
        ),
        migrations.AddConstraint(
            model_name='lesson',
            constraint=models.UniqueConstraint(condition=models.Q(('deleted_at__isnull', True)), fields=('course', 'sort_order'), name='uq_lesson_course_sort_not_deleted'),
        ),
        migrations.AddIndex(
            model_name='courseversion',
            index=models.Index(fields=['course'], name='idx_course_version_course'),
        ),
        migrations.AddIndex(
            model_name='courseversion',
            index=models.Index(fields=['version_label'], name='idx_course_version_label'),
        ),
        migrations.AddIndex(
            model_name='courseversion',
            index=models.Index(fields=['status'], name='idx_course_version_status'),
        ),
        migrations.AddIndex(
            model_name='courseversion',
            index=models.Index(fields=['released_at'], name='idx_course_version_released'),
        ),
        migrations.AddConstraint(
            model_name='courseversion',
            constraint=models.UniqueConstraint(condition=models.Q(('deleted_at__isnull', True)), fields=('course', 'version_label'), name='uq_course_version_not_deleted'),
        ),
        migrations.AddIndex(
            model_name='course',
            index=models.Index(fields=['status'], name='idx_course_status'),
        ),
        migrations.AddIndex(
            model_name='course',
            index=models.Index(fields=['name'], name='idx_course_name'),
        ),
        migrations.AddIndex(
            model_name='course',
            index=models.Index(fields=['created_at'], name='idx_course_created'),
        ),
        migrations.AddConstraint(
            model_name='course',
            constraint=models.UniqueConstraint(condition=models.Q(('deleted_at__isnull', True)), fields=('name',), name='uq_course_name_not_deleted'),
        ),
    ]
